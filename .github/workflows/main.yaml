name: Mi primera integracion continua

on: push

jobs:
  
  build: # esto es una etiqueta, así que se podría poner cualquier cosa compilar / build
   runs-on: ubuntu-latest # aquí se puede meter la máquina que quieres, en este caso utilizamos por defecto la de git.
   steps:
     - name: Descargar repositorio
       uses: actions/checkout@v2 # esto es de git que a creado para descargar el respositorio
     - name: Instalar JDK 11
       uses: actions/setup-java@v2
       with:
         java-version: "11"
         distribution: "adopt"
     - name: Construir con Maven
       run: | 
            mvn clean package -DskipTests
            ls -la target/
     - name: Guardar paquete .jar para despues desplegar
       uses: actions/upload-artifact@v4
       with:
         name: moviecards-java
         path: "${{ github.workspace }}/target/*.jar"

  test:
   needs: build
   runs-on: ubuntu-latest
   steps:
    - name: Descargar repositorio
      uses: actions/checkout@v2
    - name: Instalar JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: "11"
        distribution: "adopt"
    - name: Instalar Chrome y ChromeDriver para pruebas end to end
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          
        sudo dpkg -i google-chrome-stable_current_amd64.deb

        sudo apt --fix-broken install -y
          
        CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          
        curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          
        unzip chromedriver.zip
          
        chmod +x chromedriver
          
        sudo mv chromedriver /usr/local/bin/
          
    - name: Ejecutar la aplicación para pruebas end to end
      run: mvn spring-boot:run & sleep 60
    - name: Ejecutar las pruebas unitarias, de integración y end to end
      run: mvn clean verify

  qa:
    needs: test
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v2
      - name: Instalar JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Construir con Maven
        run: mvn clean package -DskipTests
      - name: Revisar la calidad con Sonarqube
        run: |
          mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=admin

  deploy:
    runs-on: ubuntu-latest
    needs: qa
    if: github.ref == 'refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      - name: Aprobación manual
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.AZURE_TOKEN }}
          approvers: CristianCubas

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'moviecards-cubas'
          slot-name: 'Production'
          package: '*.jar'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6048BBE921374F11BFA16137ED8CDA39 }}